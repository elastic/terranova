---

name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

## Concurrency only allowed in the main branch.
## So old builds running for old commits within the same Pull Request are cancelled
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      - name: Install poetry and dependencies
        run: |
          pip3 install --no-cache-dir --upgrade pip poetry
          poetry install --no-interaction

      - name: Lint
        run: poetry run poe lint

  build:
    strategy:
      matrix:
        os:
          - macos-14
          - macos-13
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: matrix.os == 'ubuntu-latest'
        uses: docker/setup-buildx-action@v3

      - uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      - name: Install poetry and dependencies
        run: |
          pip3 install --no-cache-dir --upgrade pip poetry
          poetry install --no-interaction

      - name: Build
        run: poetry run poe build

      - uses: actions/upload-artifact@v4
        with:
          name: terranova-${{ matrix.os }}
          path: 'dist/*'

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Create the release tag
        run: |
          uid="$(date +%s)"
          echo "uid=${uid}" >> "${GITHUB_ENV}"
          git tag "untagged-${uid}"
          git push origin "untagged-${uid}"

      - name: Create the release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create --generate-notes --latest --title="terranova ${uid}" "untagged-${uid}" ./terranova-*
