---
name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The next iteration version. This workflow will automatically perform the required version bumps"
        required: true

permissions:
  contents: read

env:
  # Ref: https://docs.astral.sh/uv/concepts/projects/sync/#checking-if-the-lockfile-is-up-to-date
  UV_FROZEN: "true"

concurrency:
  group: ${{ github.workflow }}

jobs:
  build:
    strategy:
      matrix:
        os:
          - macos-14
          - macos-13
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v5

      - name: Install environment
        uses: ./.github/workflows/env-install

      - name: Build
        run: uv run poe build

      - uses: actions/attest-build-provenance@v3
        with:
          subject-path: "dist/*"

      - uses: actions/upload-artifact@v4
        with:
          name: terranova-${{ matrix.os }}
          path: "dist/*"

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - uses: actions/download-artifact@v5
        with:
          merge-multiple: true

      - name: Install environment
        uses: ./.github/workflows/env-install

      - name: Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: uv run poe release

  post-release:
    needs:
      - release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Get token
        id: get-token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.OBS_AUTOMATION_APP_ID }}
          private_key: ${{ secrets.OBS_AUTOMATION_APP_PEM }}
          permissions: >-
            {
              "contents": "write",
              "pull_requests": "write"
            }
          repositories: >-
            ["terranova"]

      - uses: elastic/oblt-actions/git/setup@v1
        with:
          github-token: ${{ steps.get-token.outputs.token }}

      - uses: actions/checkout@v5
        with:
          token: ${{ steps.get-token.outputs.token }}
          fetch-depth: 0

      - name: Install environment
        uses: ./.github/workflows/env-install

      - name: Run post-release step
        run: uv run poe release:post
        env:
          NEXT_VERSION: ${{ inputs.version }}
          GH_TOKEN: ${{ steps.get-token.outputs.token }}
